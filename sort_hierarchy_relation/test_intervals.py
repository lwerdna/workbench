#!/usr/bin/env python

# file offset intervals of a disected ELF file

import re
import algorithm

items = [
    '[0x0,0x40) elf64_hdr',
    '[0x0,0x4) e_ident[0..4)',
    '[0x4,0x5) e_ident[EI_CLASS] (64-bit)=0x2',
    '[0x5,0x6) e_ident[EI_DATA] LSB (little-end)=0x1',
    '[0x6,0x7) e_ident[EI_VERSION] (little-end)=0x1',
    '[0x7,0x8) e_ident[EI_OSABI]=0x0',
    '[0x8,0x9) e_ident[EI_ABIVERSION]=0x0',
    '[0x9,0x10) e_ident[EI_PAD]',
    '[0x10,0x12) e_type ET_EXEC=0x2',
    '[0x12,0x14) e_machine EM_X86_64=0x3E',
    '[0x14,0x18) e_version=0x1',
    '[0x18,0x20) e_entry=0x4003E0',
    '[0x20,0x28) e_phoff=0x40',
    '[0x28,0x30) e_shoff=0x19A8',
    '[0x30,0x34) e_flags=0x0',
    '[0x34,0x36) e_ehsize=0x40',
    '[0x36,0x38) e_phentsize=0x38',
    '[0x38,0x3A) e_phnum=0x9',
    '[0x3A,0x3C) e_shentsize=0x40',
    '[0x3C,0x3E) e_shnum=0x1F',
    '[0x3E,0x40) e_shstrndx=0x1C',
    '[0x19A8,0x19AC) sh_name=0x0',
    '[0x19AC,0x19B0) sh_type=0x0 (NULL)',
    '[0x19B0,0x19B8) sh_flags=0x0 (0)',
    '[0x19B8,0x19C0) sh_addr=0x0',
    '[0x19C0,0x19C8) sh_offset=0x0',
    '[0x19C8,0x19D0) sh_size=0x0',
    '[0x19D0,0x19D4) sh_link=0x0',
    '[0x19D4,0x19D8) sh_info=0x0',
    '[0x19D8,0x19E0) sh_addralign=0x0',
    '[0x19E0,0x19E8) sh_entsize=0x0',
    '[0x19A8,0x19E8) elf64_shdr "" NULL',
    '[0x19E8,0x19EC) sh_name=0x1B',
    '[0x19EC,0x19F0) sh_type=0x1 (PROGBITS)',
    '[0x19F0,0x19F8) sh_flags=0x2 (ALLOC)',
    '[0x19F8,0x1A00) sh_addr=0x400238',
    '[0x1A00,0x1A08) sh_offset=0x238',
    '[0x1A08,0x1A10) sh_size=0x1C',
    '[0x1A10,0x1A14) sh_link=0x0',
    '[0x1A14,0x1A18) sh_info=0x0',
    '[0x1A18,0x1A20) sh_addralign=0x1',
    '[0x1A20,0x1A28) sh_entsize=0x0',
    '[0x19E8,0x1A28) elf64_shdr ".interp" PROGBITS',
    '[0x238,0x254) section ".interp" contents',
    '[0x1A28,0x1A2C) sh_name=0x23',
    '[0x1A2C,0x1A30) sh_type=0x7 (NOTE)',
    '[0x1A30,0x1A38) sh_flags=0x2 (ALLOC)',
    '[0x1A38,0x1A40) sh_addr=0x400254',
    '[0x1A40,0x1A48) sh_offset=0x254',
    '[0x1A48,0x1A50) sh_size=0x20',
    '[0x1A50,0x1A54) sh_link=0x0',
    '[0x1A54,0x1A58) sh_info=0x0',
    '[0x1A58,0x1A60) sh_addralign=0x4',
    '[0x1A60,0x1A68) sh_entsize=0x0',
    '[0x1A28,0x1A68) elf64_shdr ".note.ABI-tag" NOTE',
    '[0x254,0x274) section ".note.ABI-tag" contents',
    '[0x1A68,0x1A6C) sh_name=0x31',
    '[0x1A6C,0x1A70) sh_type=0x7 (NOTE)',
    '[0x1A70,0x1A78) sh_flags=0x2 (ALLOC)',
    '[0x1A78,0x1A80) sh_addr=0x400274',
    '[0x1A80,0x1A88) sh_offset=0x274',
    '[0x1A88,0x1A90) sh_size=0x24',
    '[0x1A90,0x1A94) sh_link=0x0',
    '[0x1A94,0x1A98) sh_info=0x0',
    '[0x1A98,0x1AA0) sh_addralign=0x4',
    '[0x1AA0,0x1AA8) sh_entsize=0x0',
    '[0x1A68,0x1AA8) elf64_shdr ".note.gnu.build-id" NOTE',
    '[0x274,0x298) section ".note.gnu.build-id" contents',
    '[0x1AA8,0x1AAC) sh_name=0x44',
    '[0x1AAC,0x1AB0) sh_type=0x6FFFFFF6 (GNU_HASH)',
    '[0x1AB0,0x1AB8) sh_flags=0x2 (ALLOC)',
    '[0x1AB8,0x1AC0) sh_addr=0x400298',
    '[0x1AC0,0x1AC8) sh_offset=0x298',
    '[0x1AC8,0x1AD0) sh_size=0x1C',
    '[0x1AD0,0x1AD4) sh_link=0x5',
    '[0x1AD4,0x1AD8) sh_info=0x0',
    '[0x1AD8,0x1AE0) sh_addralign=0x8',
    '[0x1AE0,0x1AE8) sh_entsize=0x0',
    '[0x1AA8,0x1AE8) elf64_shdr ".gnu.hash" GNU_HASH',
    '[0x298,0x2B4) section ".gnu.hash" contents',
    '[0x1AE8,0x1AEC) sh_name=0x4E',
    '[0x1AEC,0x1AF0) sh_type=0xB (DYNSYM)',
    '[0x1AF0,0x1AF8) sh_flags=0x2 (ALLOC)',
    '[0x1AF8,0x1B00) sh_addr=0x4002B8',
    '[0x1B00,0x1B08) sh_offset=0x2B8',
    '[0x1B08,0x1B10) sh_size=0x48',
    '[0x1B10,0x1B14) sh_link=0x6',
    '[0x1B14,0x1B18) sh_info=0x1',
    '[0x1B18,0x1B20) sh_addralign=0x8',
    '[0x1B20,0x1B28) sh_entsize=0x18',
    '[0x1AE8,0x1B28) elf64_shdr ".dynsym" DYNSYM',
    '[0x2B8,0x300) section ".dynsym" contents',
    '[0x1B28,0x1B2C) sh_name=0x56',
    '[0x1B2C,0x1B30) sh_type=0x3 (STRTAB)',
    '[0x1B30,0x1B38) sh_flags=0x2 (ALLOC)',
    '[0x1B38,0x1B40) sh_addr=0x400300',
    '[0x1B40,0x1B48) sh_offset=0x300',
    '[0x1B48,0x1B50) sh_size=0x38',
    '[0x1B50,0x1B54) sh_link=0x0',
    '[0x1B54,0x1B58) sh_info=0x0',
    '[0x1B58,0x1B60) sh_addralign=0x1',
    '[0x1B60,0x1B68) sh_entsize=0x0',
    '[0x1B28,0x1B68) elf64_shdr ".dynstr" STRTAB',
    '[0x300,0x338) section ".dynstr" contents',
    '[0x1B68,0x1B6C) sh_name=0x5E',
    '[0x1B6C,0x1B70) sh_type=0x6FFFFFFF (GNU_versym)',
    '[0x1B70,0x1B78) sh_flags=0x2 (ALLOC)',
    '[0x1B78,0x1B80) sh_addr=0x400338',
    '[0x1B80,0x1B88) sh_offset=0x338',
    '[0x1B88,0x1B90) sh_size=0x6',
    '[0x1B90,0x1B94) sh_link=0x5',
    '[0x1B94,0x1B98) sh_info=0x0',
    '[0x1B98,0x1BA0) sh_addralign=0x2',
    '[0x1BA0,0x1BA8) sh_entsize=0x2',
    '[0x1B68,0x1BA8) elf64_shdr ".gnu.version" GNU_versym',
    '[0x338,0x33E) section ".gnu.version" contents',
    '[0x1BA8,0x1BAC) sh_name=0x6B',
    '[0x1BAC,0x1BB0) sh_type=0x6FFFFFFE (GNU_verneed)',
    '[0x1BB0,0x1BB8) sh_flags=0x2 (ALLOC)',
    '[0x1BB8,0x1BC0) sh_addr=0x400340',
    '[0x1BC0,0x1BC8) sh_offset=0x340',
    '[0x1BC8,0x1BD0) sh_size=0x20',
    '[0x1BD0,0x1BD4) sh_link=0x6',
    '[0x1BD4,0x1BD8) sh_info=0x1',
    '[0x1BD8,0x1BE0) sh_addralign=0x8',
    '[0x1BE0,0x1BE8) sh_entsize=0x0',
    '[0x1BA8,0x1BE8) elf64_shdr ".gnu.version_r" GNU_verneed',
    '[0x340,0x360) section ".gnu.version_r" contents',
    '[0x1BE8,0x1BEC) sh_name=0x7A',
    '[0x1BEC,0x1BF0) sh_type=0x4 (RELA)',
    '[0x1BF0,0x1BF8) sh_flags=0x2 (ALLOC)',
    '[0x1BF8,0x1C00) sh_addr=0x400360',
    '[0x1C00,0x1C08) sh_offset=0x360',
    '[0x1C08,0x1C10) sh_size=0x18',
    '[0x1C10,0x1C14) sh_link=0x5',
    '[0x1C14,0x1C18) sh_info=0x0',
    '[0x1C18,0x1C20) sh_addralign=0x8',
    '[0x1C20,0x1C28) sh_entsize=0x18',
    '[0x1BE8,0x1C28) elf64_shdr ".rela.dyn" RELA',
    '[0x360,0x378) section ".rela.dyn" contents',
    '[0x1C28,0x1C2C) sh_name=0x84',
    '[0x1C2C,0x1C30) sh_type=0x4 (RELA)',
    '[0x1C30,0x1C38) sh_flags=0x42 (ALLOC|INFO_LINK)',
    '[0x1C38,0x1C40) sh_addr=0x400378',
    '[0x1C40,0x1C48) sh_offset=0x378',
    '[0x1C48,0x1C50) sh_size=0x18',
    '[0x1C50,0x1C54) sh_link=0x5',
    '[0x1C54,0x1C58) sh_info=0x18',
    '[0x1C58,0x1C60) sh_addralign=0x8',
    '[0x1C60,0x1C68) sh_entsize=0x18',
    '[0x1C28,0x1C68) elf64_shdr ".rela.plt" RELA',
    '[0x378,0x390) section ".rela.plt" contents',
    '[0x1C68,0x1C6C) sh_name=0x8E',
    '[0x1C6C,0x1C70) sh_type=0x1 (PROGBITS)',
    '[0x1C70,0x1C78) sh_flags=0x6 (ALLOC|EXECINSTR)',
    '[0x1C78,0x1C80) sh_addr=0x400390',
    '[0x1C80,0x1C88) sh_offset=0x390',
    '[0x1C88,0x1C90) sh_size=0x1A',
    '[0x1C90,0x1C94) sh_link=0x0',
    '[0x1C94,0x1C98) sh_info=0x0',
    '[0x1C98,0x1CA0) sh_addralign=0x4',
    '[0x1CA0,0x1CA8) sh_entsize=0x0',
    '[0x1C68,0x1CA8) elf64_shdr ".init" PROGBITS',
    '[0x390,0x3AA) section ".init" contents',
    '[0x1CA8,0x1CAC) sh_name=0x89',
    '[0x1CAC,0x1CB0) sh_type=0x1 (PROGBITS)',
    '[0x1CB0,0x1CB8) sh_flags=0x6 (ALLOC|EXECINSTR)',
    '[0x1CB8,0x1CC0) sh_addr=0x4003B0',
    '[0x1CC0,0x1CC8) sh_offset=0x3B0',
    '[0x1CC8,0x1CD0) sh_size=0x20',
    '[0x1CD0,0x1CD4) sh_link=0x0',
    '[0x1CD4,0x1CD8) sh_info=0x0',
    '[0x1CD8,0x1CE0) sh_addralign=0x10',
    '[0x1CE0,0x1CE8) sh_entsize=0x10',
    '[0x1CA8,0x1CE8) elf64_shdr ".plt" PROGBITS',
    '[0x3B0,0x3D0) section ".plt" contents',
    '[0x1CE8,0x1CEC) sh_name=0x94',
    '[0x1CEC,0x1CF0) sh_type=0x1 (PROGBITS)',
    '[0x1CF0,0x1CF8) sh_flags=0x6 (ALLOC|EXECINSTR)',
    '[0x1CF8,0x1D00) sh_addr=0x4003D0',
    '[0x1D00,0x1D08) sh_offset=0x3D0',
    '[0x1D08,0x1D10) sh_size=0x8',
    '[0x1D10,0x1D14) sh_link=0x0',
    '[0x1D14,0x1D18) sh_info=0x0',
    '[0x1D18,0x1D20) sh_addralign=0x8',
    '[0x1D20,0x1D28) sh_entsize=0x0',
    '[0x1CE8,0x1D28) elf64_shdr ".plt.got" PROGBITS',
    '[0x3D0,0x3D8) section ".plt.got" contents',
    '[0x1D28,0x1D2C) sh_name=0x9D',
    '[0x1D2C,0x1D30) sh_type=0x1 (PROGBITS)',
    '[0x1D30,0x1D38) sh_flags=0x6 (ALLOC|EXECINSTR)',
    '[0x1D38,0x1D40) sh_addr=0x4003E0',
    '[0x1D40,0x1D48) sh_offset=0x3E0',
    '[0x1D48,0x1D50) sh_size=0x182',
    '[0x1D50,0x1D54) sh_link=0x0',
    '[0x1D54,0x1D58) sh_info=0x0',
    '[0x1D58,0x1D60) sh_addralign=0x10',
    '[0x1D60,0x1D68) sh_entsize=0x0',
    '[0x1D28,0x1D68) elf64_shdr ".text" PROGBITS',
    '[0x3E0,0x562) section ".text" contents',
    '[0x1D68,0x1D6C) sh_name=0xA3',
    '[0x1D6C,0x1D70) sh_type=0x1 (PROGBITS)',
    '[0x1D70,0x1D78) sh_flags=0x6 (ALLOC|EXECINSTR)',
    '[0x1D78,0x1D80) sh_addr=0x400564',
    '[0x1D80,0x1D88) sh_offset=0x564',
    '[0x1D88,0x1D90) sh_size=0x9',
    '[0x1D90,0x1D94) sh_link=0x0',
    '[0x1D94,0x1D98) sh_info=0x0',
    '[0x1D98,0x1DA0) sh_addralign=0x4',
    '[0x1DA0,0x1DA8) sh_entsize=0x0',
    '[0x1D68,0x1DA8) elf64_shdr ".fini" PROGBITS',
    '[0x564,0x56D) section ".fini" contents',
    '[0x1DA8,0x1DAC) sh_name=0xA9',
    '[0x1DAC,0x1DB0) sh_type=0x1 (PROGBITS)',
    '[0x1DB0,0x1DB8) sh_flags=0x12 (ALLOC|MERGE)',
    '[0x1DB8,0x1DC0) sh_addr=0x400570',
    '[0x1DC0,0x1DC8) sh_offset=0x570',
    '[0x1DC8,0x1DD0) sh_size=0x4',
    '[0x1DD0,0x1DD4) sh_link=0x0',
    '[0x1DD4,0x1DD8) sh_info=0x0',
    '[0x1DD8,0x1DE0) sh_addralign=0x4',
    '[0x1DE0,0x1DE8) sh_entsize=0x4',
    '[0x1DA8,0x1DE8) elf64_shdr ".rodata" PROGBITS',
    '[0x570,0x574) section ".rodata" contents',
    '[0x1DE8,0x1DEC) sh_name=0xB1',
    '[0x1DEC,0x1DF0) sh_type=0x1 (PROGBITS)',
    '[0x1DF0,0x1DF8) sh_flags=0x2 (ALLOC)',
    '[0x1DF8,0x1E00) sh_addr=0x400574',
    '[0x1E00,0x1E08) sh_offset=0x574',
    '[0x1E08,0x1E10) sh_size=0x34',
    '[0x1E10,0x1E14) sh_link=0x0',
    '[0x1E14,0x1E18) sh_info=0x0',
    '[0x1E18,0x1E20) sh_addralign=0x4',
    '[0x1E20,0x1E28) sh_entsize=0x0',
    '[0x1DE8,0x1E28) elf64_shdr ".eh_frame_hdr" PROGBITS',
    '[0x574,0x5A8) section ".eh_frame_hdr" contents',
    '[0x1E28,0x1E2C) sh_name=0xBF',
    '[0x1E2C,0x1E30) sh_type=0x1 (PROGBITS)',
    '[0x1E30,0x1E38) sh_flags=0x2 (ALLOC)',
    '[0x1E38,0x1E40) sh_addr=0x4005A8',
    '[0x1E40,0x1E48) sh_offset=0x5A8',
    '[0x1E48,0x1E50) sh_size=0xF4',
    '[0x1E50,0x1E54) sh_link=0x0',
    '[0x1E54,0x1E58) sh_info=0x0',
    '[0x1E58,0x1E60) sh_addralign=0x8',
    '[0x1E60,0x1E68) sh_entsize=0x0',
    '[0x1E28,0x1E68) elf64_shdr ".eh_frame" PROGBITS',
    '[0x5A8,0x69C) section ".eh_frame" contents',
    '[0x1E68,0x1E6C) sh_name=0xC9',
    '[0x1E6C,0x1E70) sh_type=0xE (INIT_ARRAY)',
    '[0x1E70,0x1E78) sh_flags=0x3 (WRITE|ALLOC)',
    '[0x1E78,0x1E80) sh_addr=0x600E10',
    '[0x1E80,0x1E88) sh_offset=0xE10',
    '[0x1E88,0x1E90) sh_size=0x8',
    '[0x1E90,0x1E94) sh_link=0x0',
    '[0x1E94,0x1E98) sh_info=0x0',
    '[0x1E98,0x1EA0) sh_addralign=0x8',
    '[0x1EA0,0x1EA8) sh_entsize=0x0',
    '[0x1E68,0x1EA8) elf64_shdr ".init_array" INIT_ARRAY',
    '[0xE10,0xE18) section ".init_array" contents',
    '[0x1EA8,0x1EAC) sh_name=0xD5',
    '[0x1EAC,0x1EB0) sh_type=0xF (FINI_ARRAY)',
    '[0x1EB0,0x1EB8) sh_flags=0x3 (WRITE|ALLOC)',
    '[0x1EB8,0x1EC0) sh_addr=0x600E18',
    '[0x1EC0,0x1EC8) sh_offset=0xE18',
    '[0x1EC8,0x1ED0) sh_size=0x8',
    '[0x1ED0,0x1ED4) sh_link=0x0',
    '[0x1ED4,0x1ED8) sh_info=0x0',
    '[0x1ED8,0x1EE0) sh_addralign=0x8',
    '[0x1EE0,0x1EE8) sh_entsize=0x0',
    '[0x1EA8,0x1EE8) elf64_shdr ".fini_array" FINI_ARRAY',
    '[0xE18,0xE20) section ".fini_array" contents',
    '[0x1EE8,0x1EEC) sh_name=0xE1',
    '[0x1EEC,0x1EF0) sh_type=0x1 (PROGBITS)',
    '[0x1EF0,0x1EF8) sh_flags=0x3 (WRITE|ALLOC)',
    '[0x1EF8,0x1F00) sh_addr=0x600E20',
    '[0x1F00,0x1F08) sh_offset=0xE20',
    '[0x1F08,0x1F10) sh_size=0x8',
    '[0x1F10,0x1F14) sh_link=0x0',
    '[0x1F14,0x1F18) sh_info=0x0',
    '[0x1F18,0x1F20) sh_addralign=0x8',
    '[0x1F20,0x1F28) sh_entsize=0x0',
    '[0x1EE8,0x1F28) elf64_shdr ".jcr" PROGBITS',
    '[0xE20,0xE28) section ".jcr" contents',
    '[0x1F28,0x1F2C) sh_name=0xE6',
    '[0x1F2C,0x1F30) sh_type=0x6 (DYNAMIC)',
    '[0x1F30,0x1F38) sh_flags=0x3 (WRITE|ALLOC)',
    '[0x1F38,0x1F40) sh_addr=0x600E28',
    '[0x1F40,0x1F48) sh_offset=0xE28',
    '[0x1F48,0x1F50) sh_size=0x1D0',
    '[0x1F50,0x1F54) sh_link=0x6',
    '[0x1F54,0x1F58) sh_info=0x0',
    '[0x1F58,0x1F60) sh_addralign=0x8',
    '[0x1F60,0x1F68) sh_entsize=0x10',
    '[0x1F28,0x1F68) elf64_shdr ".dynamic" DYNAMIC',
    '[0xE28,0xFF8) section ".dynamic" contents',
    '[0x1F68,0x1F6C) sh_name=0x98',
    '[0x1F6C,0x1F70) sh_type=0x1 (PROGBITS)',
    '[0x1F70,0x1F78) sh_flags=0x3 (WRITE|ALLOC)',
    '[0x1F78,0x1F80) sh_addr=0x600FF8',
    '[0x1F80,0x1F88) sh_offset=0xFF8',
    '[0x1F88,0x1F90) sh_size=0x8',
    '[0x1F90,0x1F94) sh_link=0x0',
    '[0x1F94,0x1F98) sh_info=0x0',
    '[0x1F98,0x1FA0) sh_addralign=0x8',
    '[0x1FA0,0x1FA8) sh_entsize=0x8',
    '[0x1F68,0x1FA8) elf64_shdr ".got" PROGBITS',
    '[0xFF8,0x1000) section ".got" contents',
    '[0x1FA8,0x1FAC) sh_name=0xEF',
    '[0x1FAC,0x1FB0) sh_type=0x1 (PROGBITS)',
    '[0x1FB0,0x1FB8) sh_flags=0x3 (WRITE|ALLOC)',
    '[0x1FB8,0x1FC0) sh_addr=0x601000',
    '[0x1FC0,0x1FC8) sh_offset=0x1000',
    '[0x1FC8,0x1FD0) sh_size=0x20',
    '[0x1FD0,0x1FD4) sh_link=0x0',
    '[0x1FD4,0x1FD8) sh_info=0x0',
    '[0x1FD8,0x1FE0) sh_addralign=0x8',
    '[0x1FE0,0x1FE8) sh_entsize=0x8',
    '[0x1FA8,0x1FE8) elf64_shdr ".got.plt" PROGBITS',
    '[0x1000,0x1020) section ".got.plt" contents',
    '[0x1FE8,0x1FEC) sh_name=0xF8',
    '[0x1FEC,0x1FF0) sh_type=0x1 (PROGBITS)',
    '[0x1FF0,0x1FF8) sh_flags=0x3 (WRITE|ALLOC)',
    '[0x1FF8,0x2000) sh_addr=0x601020',
    '[0x2000,0x2008) sh_offset=0x1020',
    '[0x2008,0x2010) sh_size=0x10',
    '[0x2010,0x2014) sh_link=0x0',
    '[0x2014,0x2018) sh_info=0x0',
    '[0x2018,0x2020) sh_addralign=0x8',
    '[0x2020,0x2028) sh_entsize=0x0',
    '[0x1FE8,0x2028) elf64_shdr ".data" PROGBITS',
    '[0x1020,0x1030) section ".data" contents',
    '[0x2028,0x202C) sh_name=0xFE',
    '[0x202C,0x2030) sh_type=0x8 (NOBITS)',
    '[0x2030,0x2038) sh_flags=0x3 (WRITE|ALLOC)',
    '[0x2038,0x2040) sh_addr=0x601030',
    '[0x2040,0x2048) sh_offset=0x1030',
    '[0x2048,0x2050) sh_size=0x8',
    '[0x2050,0x2054) sh_link=0x0',
    '[0x2054,0x2058) sh_info=0x0',
    '[0x2058,0x2060) sh_addralign=0x1',
    '[0x2060,0x2068) sh_entsize=0x0',
    '[0x2028,0x2068) elf64_shdr ".bss" NOBITS',
    '[0x2068,0x206C) sh_name=0x103',
    '[0x206C,0x2070) sh_type=0x1 (PROGBITS)',
    '[0x2070,0x2078) sh_flags=0x30 (MERGE|STRINGS)',
    '[0x2078,0x2080) sh_addr=0x0',
    '[0x2080,0x2088) sh_offset=0x1030',
    '[0x2088,0x2090) sh_size=0x34',
    '[0x2090,0x2094) sh_link=0x0',
    '[0x2094,0x2098) sh_info=0x0',
    '[0x2098,0x20A0) sh_addralign=0x1',
    '[0x20A0,0x20A8) sh_entsize=0x1',
    '[0x2068,0x20A8) elf64_shdr ".comment" PROGBITS',
    '[0x1030,0x1064) section ".comment" contents',
    '[0x20A8,0x20AC) sh_name=0x11',
    '[0x20AC,0x20B0) sh_type=0x3 (STRTAB)',
    '[0x20B0,0x20B8) sh_flags=0x0 (0)',
    '[0x20B8,0x20C0) sh_addr=0x0',
    '[0x20C0,0x20C8) sh_offset=0x189A',
    '[0x20C8,0x20D0) sh_size=0x10C',
    '[0x20D0,0x20D4) sh_link=0x0',
    '[0x20D4,0x20D8) sh_info=0x0',
    '[0x20D8,0x20E0) sh_addralign=0x1',
    '[0x20E0,0x20E8) sh_entsize=0x0',
    '[0x20A8,0x20E8) elf64_shdr ".shstrtab" STRTAB',
    '[0x189A,0x19A6) section ".shstrtab" contents',
    '[0x20E8,0x20EC) sh_name=0x1',
    '[0x20EC,0x20F0) sh_type=0x2 (SYMTAB)',
    '[0x20F0,0x20F8) sh_flags=0x0 (0)',
    '[0x20F8,0x2100) sh_addr=0x0',
    '[0x2100,0x2108) sh_offset=0x1068',
    '[0x2108,0x2110) sh_size=0x630',
    '[0x2110,0x2114) sh_link=0x1E',
    '[0x2114,0x2118) sh_info=0x2F',
    '[0x2118,0x2120) sh_addralign=0x8',
    '[0x2120,0x2128) sh_entsize=0x18',
    '[0x20E8,0x2128) elf64_shdr ".symtab" SYMTAB',
    '[0x1068,0x1698) section ".symtab" contents',
    '[0x2128,0x212C) sh_name=0x9',
    '[0x212C,0x2130) sh_type=0x3 (STRTAB)',
    '[0x2130,0x2138) sh_flags=0x0 (0)',
    '[0x2138,0x2140) sh_addr=0x0',
    '[0x2140,0x2148) sh_offset=0x1698',
    '[0x2148,0x2150) sh_size=0x202',
    '[0x2150,0x2154) sh_link=0x0',
    '[0x2154,0x2158) sh_info=0x0',
    '[0x2158,0x2160) sh_addralign=0x1',
    '[0x2160,0x2168) sh_entsize=0x0',
    '[0x2128,0x2168) elf64_shdr ".strtab" STRTAB',
    '[0x1698,0x189A) section ".strtab" contents',
    '[0xE28,0xE30) d_tag:0x1 (NEEDED)',
    '[0xE30,0xE38) val_ptr=0x1',
    '[0xE28,0xE38) Elf64_Dyn (NEEDED)',
    '[0xE38,0xE40) d_tag:0xC (INIT)',
    '[0xE40,0xE48) val_ptr=0x400390',
    '[0xE38,0xE48) Elf64_Dyn (INIT)',
    '[0xE48,0xE50) d_tag:0xD (FINI)',
    '[0xE50,0xE58) val_ptr=0x400564',
    '[0xE48,0xE58) Elf64_Dyn (FINI)',
    '[0xE58,0xE60) d_tag:0x19 (INIT_ARRAY)',
    '[0xE60,0xE68) val_ptr=0x600E10',
    '[0xE58,0xE68) Elf64_Dyn (INIT_ARRAY)',
    '[0xE68,0xE70) d_tag:0x1B (INIT_ARRAYSZ)',
    '[0xE70,0xE78) val_ptr=0x8',
    '[0xE68,0xE78) Elf64_Dyn (INIT_ARRAYSZ)',
    '[0xE78,0xE80) d_tag:0x1A (FINI_ARRAY)',
    '[0xE80,0xE88) val_ptr=0x600E18',
    '[0xE78,0xE88) Elf64_Dyn (FINI_ARRAY)',
    '[0xE88,0xE90) d_tag:0x1C (FINI_ARRAYSZ)',
    '[0xE90,0xE98) val_ptr=0x8',
    '[0xE88,0xE98) Elf64_Dyn (FINI_ARRAYSZ)',
    '[0xE98,0xEA0) d_tag:0x6FFFFEF5 (OS)',
    '[0xEA0,0xEA8) val_ptr=0x400298',
    '[0xE98,0xEA8) Elf64_Dyn (OS)',
    '[0xEA8,0xEB0) d_tag:0x5 (STRTAB)',
    '[0xEB0,0xEB8) val_ptr=0x400300',
    '[0xEA8,0xEB8) Elf64_Dyn (STRTAB)',
    '[0xEB8,0xEC0) d_tag:0x6 (SYMTAB)',
    '[0xEC0,0xEC8) val_ptr=0x4002B8',
    '[0xEB8,0xEC8) Elf64_Dyn (SYMTAB)',
    '[0xEC8,0xED0) d_tag:0xA (STRSZ)',
    '[0xED0,0xED8) val_ptr=0x38',
    '[0xEC8,0xED8) Elf64_Dyn (STRSZ)',
    '[0xED8,0xEE0) d_tag:0xB (SYMENT)',
    '[0xEE0,0xEE8) val_ptr=0x18',
    '[0xED8,0xEE8) Elf64_Dyn (SYMENT)',
    '[0xEE8,0xEF0) d_tag:0x15 (DEBUG)',
    '[0xEF0,0xEF8) val_ptr=0x0',
    '[0xEE8,0xEF8) Elf64_Dyn (DEBUG)',
    '[0xEF8,0xF00) d_tag:0x3 (PLTGOT)',
    '[0xF00,0xF08) val_ptr=0x601000',
    '[0xEF8,0xF08) Elf64_Dyn (PLTGOT)',
    '[0xF08,0xF10) d_tag:0x2 (PLTRELSZ)',
    '[0xF10,0xF18) val_ptr=0x18',
    '[0xF08,0xF18) Elf64_Dyn (PLTRELSZ)',
    '[0xF18,0xF20) d_tag:0x14 (PLTREL)',
    '[0xF20,0xF28) val_ptr=0x7',
    '[0xF18,0xF28) Elf64_Dyn (PLTREL)',
    '[0xF28,0xF30) d_tag:0x17 (JMPREL)',
    '[0xF30,0xF38) val_ptr=0x400378',
    '[0xF28,0xF38) Elf64_Dyn (JMPREL)',
    '[0xF38,0xF40) d_tag:0x7 (RELA)',
    '[0xF40,0xF48) val_ptr=0x400360',
    '[0xF38,0xF48) Elf64_Dyn (RELA)',
    '[0xF48,0xF50) d_tag:0x8 (RELASZ)',
    '[0xF50,0xF58) val_ptr=0x18',
    '[0xF48,0xF58) Elf64_Dyn (RELASZ)',
    '[0xF58,0xF60) d_tag:0x9 (RELAENT)',
    '[0xF60,0xF68) val_ptr=0x18',
    '[0xF58,0xF68) Elf64_Dyn (RELAENT)',
    '[0xF68,0xF70) d_tag:0x6FFFFFFE (OS)',
    '[0xF70,0xF78) val_ptr=0x400340',
    '[0xF68,0xF78) Elf64_Dyn (OS)',
    '[0xF78,0xF80) d_tag:0x6FFFFFFF (OS)',
    '[0xF80,0xF88) val_ptr=0x1',
    '[0xF78,0xF88) Elf64_Dyn (OS)',
    '[0xF88,0xF90) d_tag:0x6FFFFFF0 (OS)',
    '[0xF90,0xF98) val_ptr=0x400338',
    '[0xF88,0xF98) Elf64_Dyn (OS)',
    '[0xF98,0xFA0) d_tag:0x0 (NULL)',
    '[0xFA0,0xFA8) val_ptr=0x0',
    '[0xF98,0xFA8) Elf64_Dyn (NULL)',
    '[0x1068,0x106C) st_name=0x0 ""',
    '[0x106C,0x106D) st_info bind:0(LOCAL) type:0(NOTYPE)',
    '[0x106D,0x106E) st_other=0x0',
    '[0x106E,0x1070) st_shndx=0x0',
    '[0x1070,0x1078) st_value=0x0',
    '[0x1078,0x1080) st_size=0x0',
    '[0x1068,0x1080) Elf64_Sym ""',
    '[0x1080,0x1084) st_name=0x0 ""',
    '[0x1084,0x1085) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x1085,0x1086) st_other=0x0',
    '[0x1086,0x1088) st_shndx=0x1',
    '[0x1088,0x1090) st_value=0x400238',
    '[0x1090,0x1098) st_size=0x0',
    '[0x1080,0x1098) Elf64_Sym ""',
    '[0x1098,0x109C) st_name=0x0 ""',
    '[0x109C,0x109D) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x109D,0x109E) st_other=0x0',
    '[0x109E,0x10A0) st_shndx=0x2',
    '[0x10A0,0x10A8) st_value=0x400254',
    '[0x10A8,0x10B0) st_size=0x0',
    '[0x1098,0x10B0) Elf64_Sym ""',
    '[0x10B0,0x10B4) st_name=0x0 ""',
    '[0x10B4,0x10B5) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x10B5,0x10B6) st_other=0x0',
    '[0x10B6,0x10B8) st_shndx=0x3',
    '[0x10B8,0x10C0) st_value=0x400274',
    '[0x10C0,0x10C8) st_size=0x0',
    '[0x10B0,0x10C8) Elf64_Sym ""',
    '[0x10C8,0x10CC) st_name=0x0 ""',
    '[0x10CC,0x10CD) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x10CD,0x10CE) st_other=0x0',
    '[0x10CE,0x10D0) st_shndx=0x4',
    '[0x10D0,0x10D8) st_value=0x400298',
    '[0x10D8,0x10E0) st_size=0x0',
    '[0x10C8,0x10E0) Elf64_Sym ""',
    '[0x10E0,0x10E4) st_name=0x0 ""',
    '[0x10E4,0x10E5) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x10E5,0x10E6) st_other=0x0',
    '[0x10E6,0x10E8) st_shndx=0x5',
    '[0x10E8,0x10F0) st_value=0x4002B8',
    '[0x10F0,0x10F8) st_size=0x0',
    '[0x10E0,0x10F8) Elf64_Sym ""',
    '[0x10F8,0x10FC) st_name=0x0 ""',
    '[0x10FC,0x10FD) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x10FD,0x10FE) st_other=0x0',
    '[0x10FE,0x1100) st_shndx=0x6',
    '[0x1100,0x1108) st_value=0x400300',
    '[0x1108,0x1110) st_size=0x0',
    '[0x10F8,0x1110) Elf64_Sym ""',
    '[0x1110,0x1114) st_name=0x0 ""',
    '[0x1114,0x1115) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x1115,0x1116) st_other=0x0',
    '[0x1116,0x1118) st_shndx=0x7',
    '[0x1118,0x1120) st_value=0x400338',
    '[0x1120,0x1128) st_size=0x0',
    '[0x1110,0x1128) Elf64_Sym ""',
    '[0x1128,0x112C) st_name=0x0 ""',
    '[0x112C,0x112D) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x112D,0x112E) st_other=0x0',
    '[0x112E,0x1130) st_shndx=0x8',
    '[0x1130,0x1138) st_value=0x400340',
    '[0x1138,0x1140) st_size=0x0',
    '[0x1128,0x1140) Elf64_Sym ""',
    '[0x1140,0x1144) st_name=0x0 ""',
    '[0x1144,0x1145) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x1145,0x1146) st_other=0x0',
    '[0x1146,0x1148) st_shndx=0x9',
    '[0x1148,0x1150) st_value=0x400360',
    '[0x1150,0x1158) st_size=0x0',
    '[0x1140,0x1158) Elf64_Sym ""',
    '[0x1158,0x115C) st_name=0x0 ""',
    '[0x115C,0x115D) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x115D,0x115E) st_other=0x0',
    '[0x115E,0x1160) st_shndx=0xA',
    '[0x1160,0x1168) st_value=0x400378',
    '[0x1168,0x1170) st_size=0x0',
    '[0x1158,0x1170) Elf64_Sym ""',
    '[0x1170,0x1174) st_name=0x0 ""',
    '[0x1174,0x1175) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x1175,0x1176) st_other=0x0',
    '[0x1176,0x1178) st_shndx=0xB',
    '[0x1178,0x1180) st_value=0x400390',
    '[0x1180,0x1188) st_size=0x0',
    '[0x1170,0x1188) Elf64_Sym ""',
    '[0x1188,0x118C) st_name=0x0 ""',
    '[0x118C,0x118D) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x118D,0x118E) st_other=0x0',
    '[0x118E,0x1190) st_shndx=0xC',
    '[0x1190,0x1198) st_value=0x4003B0',
    '[0x1198,0x11A0) st_size=0x0',
    '[0x1188,0x11A0) Elf64_Sym ""',
    '[0x11A0,0x11A4) st_name=0x0 ""',
    '[0x11A4,0x11A5) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x11A5,0x11A6) st_other=0x0',
    '[0x11A6,0x11A8) st_shndx=0xD',
    '[0x11A8,0x11B0) st_value=0x4003D0',
    '[0x11B0,0x11B8) st_size=0x0',
    '[0x11A0,0x11B8) Elf64_Sym ""',
    '[0x11B8,0x11BC) st_name=0x0 ""',
    '[0x11BC,0x11BD) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x11BD,0x11BE) st_other=0x0',
    '[0x11BE,0x11C0) st_shndx=0xE',
    '[0x11C0,0x11C8) st_value=0x4003E0',
    '[0x11C8,0x11D0) st_size=0x0',
    '[0x11B8,0x11D0) Elf64_Sym ""',
    '[0x11D0,0x11D4) st_name=0x0 ""',
    '[0x11D4,0x11D5) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x11D5,0x11D6) st_other=0x0',
    '[0x11D6,0x11D8) st_shndx=0xF',
    '[0x11D8,0x11E0) st_value=0x400564',
    '[0x11E0,0x11E8) st_size=0x0',
    '[0x11D0,0x11E8) Elf64_Sym ""',
    '[0x11E8,0x11EC) st_name=0x0 ""',
    '[0x11EC,0x11ED) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x11ED,0x11EE) st_other=0x0',
    '[0x11EE,0x11F0) st_shndx=0x10',
    '[0x11F0,0x11F8) st_value=0x400570',
    '[0x11F8,0x1200) st_size=0x0',
    '[0x11E8,0x1200) Elf64_Sym ""',
    '[0x1200,0x1204) st_name=0x0 ""',
    '[0x1204,0x1205) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x1205,0x1206) st_other=0x0',
    '[0x1206,0x1208) st_shndx=0x11',
    '[0x1208,0x1210) st_value=0x400574',
    '[0x1210,0x1218) st_size=0x0',
    '[0x1200,0x1218) Elf64_Sym ""',
    '[0x1218,0x121C) st_name=0x0 ""',
    '[0x121C,0x121D) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x121D,0x121E) st_other=0x0',
    '[0x121E,0x1220) st_shndx=0x12',
    '[0x1220,0x1228) st_value=0x4005A8',
    '[0x1228,0x1230) st_size=0x0',
    '[0x1218,0x1230) Elf64_Sym ""',
    '[0x1230,0x1234) st_name=0x0 ""',
    '[0x1234,0x1235) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x1235,0x1236) st_other=0x0',
    '[0x1236,0x1238) st_shndx=0x13',
    '[0x1238,0x1240) st_value=0x600E10',
    '[0x1240,0x1248) st_size=0x0',
    '[0x1230,0x1248) Elf64_Sym ""',
    '[0x1248,0x124C) st_name=0x0 ""',
    '[0x124C,0x124D) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x124D,0x124E) st_other=0x0',
    '[0x124E,0x1250) st_shndx=0x14',
    '[0x1250,0x1258) st_value=0x600E18',
    '[0x1258,0x1260) st_size=0x0',
    '[0x1248,0x1260) Elf64_Sym ""',
    '[0x1260,0x1264) st_name=0x0 ""',
    '[0x1264,0x1265) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x1265,0x1266) st_other=0x0',
    '[0x1266,0x1268) st_shndx=0x15',
    '[0x1268,0x1270) st_value=0x600E20',
    '[0x1270,0x1278) st_size=0x0',
    '[0x1260,0x1278) Elf64_Sym ""',
    '[0x1278,0x127C) st_name=0x0 ""',
    '[0x127C,0x127D) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x127D,0x127E) st_other=0x0',
    '[0x127E,0x1280) st_shndx=0x16',
    '[0x1280,0x1288) st_value=0x600E28',
    '[0x1288,0x1290) st_size=0x0',
    '[0x1278,0x1290) Elf64_Sym ""',
    '[0x1290,0x1294) st_name=0x0 ""',
    '[0x1294,0x1295) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x1295,0x1296) st_other=0x0',
    '[0x1296,0x1298) st_shndx=0x17',
    '[0x1298,0x12A0) st_value=0x600FF8',
    '[0x12A0,0x12A8) st_size=0x0',
    '[0x1290,0x12A8) Elf64_Sym ""',
    '[0x12A8,0x12AC) st_name=0x0 ""',
    '[0x12AC,0x12AD) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x12AD,0x12AE) st_other=0x0',
    '[0x12AE,0x12B0) st_shndx=0x18',
    '[0x12B0,0x12B8) st_value=0x601000',
    '[0x12B8,0x12C0) st_size=0x0',
    '[0x12A8,0x12C0) Elf64_Sym ""',
    '[0x12C0,0x12C4) st_name=0x0 ""',
    '[0x12C4,0x12C5) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x12C5,0x12C6) st_other=0x0',
    '[0x12C6,0x12C8) st_shndx=0x19',
    '[0x12C8,0x12D0) st_value=0x601020',
    '[0x12D0,0x12D8) st_size=0x0',
    '[0x12C0,0x12D8) Elf64_Sym ""',
    '[0x12D8,0x12DC) st_name=0x0 ""',
    '[0x12DC,0x12DD) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x12DD,0x12DE) st_other=0x0',
    '[0x12DE,0x12E0) st_shndx=0x1A',
    '[0x12E0,0x12E8) st_value=0x601030',
    '[0x12E8,0x12F0) st_size=0x0',
    '[0x12D8,0x12F0) Elf64_Sym ""',
    '[0x12F0,0x12F4) st_name=0x0 ""',
    '[0x12F4,0x12F5) st_info bind:0(LOCAL) type:3(SECTION)',
    '[0x12F5,0x12F6) st_other=0x0',
    '[0x12F6,0x12F8) st_shndx=0x1B',
    '[0x12F8,0x1300) st_value=0x0',
    '[0x1300,0x1308) st_size=0x0',
    '[0x12F0,0x1308) Elf64_Sym ""',
    '[0x1308,0x130C) st_name=0x1 "crtstuff.c"',
    '[0x130C,0x130D) st_info bind:0(LOCAL) type:4(FILE)',
    '[0x130D,0x130E) st_other=0x0',
    '[0x130E,0x1310) st_shndx=0xFFF1',
    '[0x1310,0x1318) st_value=0x0',
    '[0x1318,0x1320) st_size=0x0',
    '[0x1308,0x1320) Elf64_Sym "crtstuff.c"',
    '[0x1320,0x1324) st_name=0xC "__JCR_LIST__"',
    '[0x1324,0x1325) st_info bind:0(LOCAL) type:1(OBJECT)',
    '[0x1325,0x1326) st_other=0x0',
    '[0x1326,0x1328) st_shndx=0x15',
    '[0x1328,0x1330) st_value=0x600E20',
    '[0x1330,0x1338) st_size=0x0',
    '[0x1320,0x1338) Elf64_Sym "__JCR_LIST__"',
    '[0x1338,0x133C) st_name=0x19 "deregister_tm_clones"',
    '[0x133C,0x133D) st_info bind:0(LOCAL) type:2(FUNC)',
    '[0x133D,0x133E) st_other=0x0',
    '[0x133E,0x1340) st_shndx=0xE',
    '[0x1340,0x1348) st_value=0x400410',
    '[0x1348,0x1350) st_size=0x0',
    '[0x1338,0x1350) Elf64_Sym "deregister_tm_clones"',
    '[0x1350,0x1354) st_name=0x1B "register_tm_clones"',
    '[0x1354,0x1355) st_info bind:0(LOCAL) type:2(FUNC)',
    '[0x1355,0x1356) st_other=0x0',
    '[0x1356,0x1358) st_shndx=0xE',
    '[0x1358,0x1360) st_value=0x400450',
    '[0x1360,0x1368) st_size=0x0',
    '[0x1350,0x1368) Elf64_Sym "register_tm_clones"',
    '[0x1368,0x136C) st_name=0x2E "__do_global_dtors_aux"',
    '[0x136C,0x136D) st_info bind:0(LOCAL) type:2(FUNC)',
    '[0x136D,0x136E) st_other=0x0',
    '[0x136E,0x1370) st_shndx=0xE',
    '[0x1370,0x1378) st_value=0x400490',
    '[0x1378,0x1380) st_size=0x0',
    '[0x1368,0x1380) Elf64_Sym "__do_global_dtors_aux"',
    '[0x1380,0x1384) st_name=0x44 "completed.7585"',
    '[0x1384,0x1385) st_info bind:0(LOCAL) type:1(OBJECT)',
    '[0x1385,0x1386) st_other=0x0',
    '[0x1386,0x1388) st_shndx=0x1A',
    '[0x1388,0x1390) st_value=0x601030',
    '[0x1390,0x1398) st_size=0x1',
    '[0x1380,0x1398) Elf64_Sym "completed.7585"',
    '[0x1398,0x139C) st_name=0x53 "__do_global_dtors_aux_fini_array_entry"',
    '[0x139C,0x139D) st_info bind:0(LOCAL) type:1(OBJECT)',
    '[0x139D,0x139E) st_other=0x0',
    '[0x139E,0x13A0) st_shndx=0x14',
    '[0x13A0,0x13A8) st_value=0x600E18',
    '[0x13A8,0x13B0) st_size=0x0',
    '[0x1398,0x13B0) Elf64_Sym "__do_global_dtors_aux_fini_array_entry"',
    '[0x13B0,0x13B4) st_name=0x7A "frame_dummy"',
    '[0x13B4,0x13B5) st_info bind:0(LOCAL) type:2(FUNC)',
    '[0x13B5,0x13B6) st_other=0x0',
    '[0x13B6,0x13B8) st_shndx=0xE',
    '[0x13B8,0x13C0) st_value=0x4004B0',
    '[0x13C0,0x13C8) st_size=0x0',
    '[0x13B0,0x13C8) Elf64_Sym "frame_dummy"',
    '[0x13C8,0x13CC) st_name=0x86 "__frame_dummy_init_array_entry"',
    '[0x13CC,0x13CD) st_info bind:0(LOCAL) type:1(OBJECT)',
    '[0x13CD,0x13CE) st_other=0x0',
    '[0x13CE,0x13D0) st_shndx=0x13',
    '[0x13D0,0x13D8) st_value=0x600E10',
    '[0x13D8,0x13E0) st_size=0x0',
    '[0x13C8,0x13E0) Elf64_Sym "__frame_dummy_init_array_entry"',
    '[0x13E0,0x13E4) st_name=0xA5 "hello.c"',
    '[0x13E4,0x13E5) st_info bind:0(LOCAL) type:4(FILE)',
    '[0x13E5,0x13E6) st_other=0x0',
    '[0x13E6,0x13E8) st_shndx=0xFFF1',
    '[0x13E8,0x13F0) st_value=0x0',
    '[0x13F0,0x13F8) st_size=0x0',
    '[0x13E0,0x13F8) Elf64_Sym "hello.c"',
    '[0x13F8,0x13FC) st_name=0x1 "crtstuff.c"',
    '[0x13FC,0x13FD) st_info bind:0(LOCAL) type:4(FILE)',
    '[0x13FD,0x13FE) st_other=0x0',
    '[0x13FE,0x1400) st_shndx=0xFFF1',
    '[0x1400,0x1408) st_value=0x0',
    '[0x1408,0x1410) st_size=0x0',
    '[0x13F8,0x1410) Elf64_Sym "crtstuff.c"',
    '[0x1410,0x1414) st_name=0xAD "__FRAME_END__"',
    '[0x1414,0x1415) st_info bind:0(LOCAL) type:1(OBJECT)',
    '[0x1415,0x1416) st_other=0x0',
    '[0x1416,0x1418) st_shndx=0x12',
    '[0x1418,0x1420) st_value=0x400698',
    '[0x1420,0x1428) st_size=0x0',
    '[0x1410,0x1428) Elf64_Sym "__FRAME_END__"',
    '[0x1428,0x142C) st_name=0xBB "__JCR_END__"',
    '[0x142C,0x142D) st_info bind:0(LOCAL) type:1(OBJECT)',
    '[0x142D,0x142E) st_other=0x0',
    '[0x142E,0x1430) st_shndx=0x15',
    '[0x1430,0x1438) st_value=0x600E20',
    '[0x1438,0x1440) st_size=0x0',
    '[0x1428,0x1440) Elf64_Sym "__JCR_END__"',
    '[0x1440,0x1444) st_name=0x0 ""',
    '[0x1444,0x1445) st_info bind:0(LOCAL) type:4(FILE)',
    '[0x1445,0x1446) st_other=0x0',
    '[0x1446,0x1448) st_shndx=0xFFF1',
    '[0x1448,0x1450) st_value=0x0',
    '[0x1450,0x1458) st_size=0x0',
    '[0x1440,0x1458) Elf64_Sym ""',
    '[0x1458,0x145C) st_name=0xC7 "__init_array_end"',
    '[0x145C,0x145D) st_info bind:0(LOCAL) type:0(NOTYPE)',
    '[0x145D,0x145E) st_other=0x0',
    '[0x145E,0x1460) st_shndx=0x13',
    '[0x1460,0x1468) st_value=0x600E18',
    '[0x1468,0x1470) st_size=0x0',
    '[0x1458,0x1470) Elf64_Sym "__init_array_end"',
    '[0x1470,0x1474) st_name=0xD8 "_DYNAMIC"',
    '[0x1474,0x1475) st_info bind:0(LOCAL) type:1(OBJECT)',
    '[0x1475,0x1476) st_other=0x0',
    '[0x1476,0x1478) st_shndx=0x16',
    '[0x1478,0x1480) st_value=0x600E28',
    '[0x1480,0x1488) st_size=0x0',
    '[0x1470,0x1488) Elf64_Sym "_DYNAMIC"',
    '[0x1488,0x148C) st_name=0xE1 "__init_array_start"',
    '[0x148C,0x148D) st_info bind:0(LOCAL) type:0(NOTYPE)',
    '[0x148D,0x148E) st_other=0x0',
    '[0x148E,0x1490) st_shndx=0x13',
    '[0x1490,0x1498) st_value=0x600E10',
    '[0x1498,0x14A0) st_size=0x0',
    '[0x1488,0x14A0) Elf64_Sym "__init_array_start"',
    '[0x14A0,0x14A4) st_name=0xF4 "__GNU_EH_FRAME_HDR"',
    '[0x14A4,0x14A5) st_info bind:0(LOCAL) type:0(NOTYPE)',
    '[0x14A5,0x14A6) st_other=0x0',
    '[0x14A6,0x14A8) st_shndx=0x11',
    '[0x14A8,0x14B0) st_value=0x400574',
    '[0x14B0,0x14B8) st_size=0x0',
    '[0x14A0,0x14B8) Elf64_Sym "__GNU_EH_FRAME_HDR"',
    '[0x14B8,0x14BC) st_name=0x107 "_GLOBAL_OFFSET_TABLE_"',
    '[0x14BC,0x14BD) st_info bind:0(LOCAL) type:1(OBJECT)',
    '[0x14BD,0x14BE) st_other=0x0',
    '[0x14BE,0x14C0) st_shndx=0x18',
    '[0x14C0,0x14C8) st_value=0x601000',
    '[0x14C8,0x14D0) st_size=0x0',
    '[0x14B8,0x14D0) Elf64_Sym "_GLOBAL_OFFSET_TABLE_"',
    '[0x14D0,0x14D4) st_name=0x11D "__libc_csu_fini"',
    '[0x14D4,0x14D5) st_info bind:1(GLOBAL) type:2(FUNC)',
    '[0x14D5,0x14D6) st_other=0x0',
    '[0x14D6,0x14D8) st_shndx=0xE',
    '[0x14D8,0x14E0) st_value=0x400560',
    '[0x14E0,0x14E8) st_size=0x2',
    '[0x14D0,0x14E8) Elf64_Sym "__libc_csu_fini"',
    '[0x14E8,0x14EC) st_name=0x12D "_ITM_deregisterTMCloneTable"',
    '[0x14EC,0x14ED) st_info bind:2(WEAK) type:0(NOTYPE)',
    '[0x14ED,0x14EE) st_other=0x0',
    '[0x14EE,0x14F0) st_shndx=0x0',
    '[0x14F0,0x14F8) st_value=0x0',
    '[0x14F8,0x1500) st_size=0x0',
    '[0x14E8,0x1500) Elf64_Sym "_ITM_deregisterTMCloneTable"',
    '[0x1500,0x1504) st_name=0x171 "data_start"',
    '[0x1504,0x1505) st_info bind:2(WEAK) type:0(NOTYPE)',
    '[0x1505,0x1506) st_other=0x0',
    '[0x1506,0x1508) st_shndx=0x19',
    '[0x1508,0x1510) st_value=0x601020',
    '[0x1510,0x1518) st_size=0x0',
    '[0x1500,0x1518) Elf64_Sym "data_start"',
    '[0x1518,0x151C) st_name=0x149 "_edata"',
    '[0x151C,0x151D) st_info bind:1(GLOBAL) type:0(NOTYPE)',
    '[0x151D,0x151E) st_other=0x0',
    '[0x151E,0x1520) st_shndx=0x19',
    '[0x1520,0x1528) st_value=0x601030',
    '[0x1528,0x1530) st_size=0x0',
    '[0x1518,0x1530) Elf64_Sym "_edata"',
    '[0x1530,0x1534) st_name=0x127 "_fini"',
    '[0x1534,0x1535) st_info bind:1(GLOBAL) type:2(FUNC)',
    '[0x1535,0x1536) st_other=0x0',
    '[0x1536,0x1538) st_shndx=0xF',
    '[0x1538,0x1540) st_value=0x400564',
    '[0x1540,0x1548) st_size=0x0',
    '[0x1530,0x1548) Elf64_Sym "_fini"',
    '[0x1548,0x154C) st_name=0x150 "__libc_start_main@@GLIBC_2.2.5"',
    '[0x154C,0x154D) st_info bind:1(GLOBAL) type:2(FUNC)',
    '[0x154D,0x154E) st_other=0x0',
    '[0x154E,0x1550) st_shndx=0x0',
    '[0x1550,0x1558) st_value=0x0',
    '[0x1558,0x1560) st_size=0x0',
    '[0x1548,0x1560) Elf64_Sym "__libc_start_main@@GLIBC_2.2.5"',
    '[0x1560,0x1564) st_name=0x16F "__data_start"',
    '[0x1564,0x1565) st_info bind:1(GLOBAL) type:0(NOTYPE)',
    '[0x1565,0x1566) st_other=0x0',
    '[0x1566,0x1568) st_shndx=0x19',
    '[0x1568,0x1570) st_value=0x601020',
    '[0x1570,0x1578) st_size=0x0',
    '[0x1560,0x1578) Elf64_Sym "__data_start"',
    '[0x1578,0x157C) st_name=0x17C "__gmon_start__"',
    '[0x157C,0x157D) st_info bind:2(WEAK) type:0(NOTYPE)',
    '[0x157D,0x157E) st_other=0x0',
    '[0x157E,0x1580) st_shndx=0x0',
    '[0x1580,0x1588) st_value=0x0',
    '[0x1588,0x1590) st_size=0x0',
    '[0x1578,0x1590) Elf64_Sym "__gmon_start__"',
    '[0x1590,0x1594) st_name=0x18B "__dso_handle"',
    '[0x1594,0x1595) st_info bind:1(GLOBAL) type:1(OBJECT)',
    '[0x1595,0x1596) st_other=0x2',
    '[0x1596,0x1598) st_shndx=0x19',
    '[0x1598,0x15A0) st_value=0x601028',
    '[0x15A0,0x15A8) st_size=0x0',
    '[0x1590,0x15A8) Elf64_Sym "__dso_handle"',
    '[0x15A8,0x15AC) st_name=0x198 "_IO_stdin_used"',
    '[0x15AC,0x15AD) st_info bind:1(GLOBAL) type:1(OBJECT)',
    '[0x15AD,0x15AE) st_other=0x0',
    '[0x15AE,0x15B0) st_shndx=0x10',
    '[0x15B0,0x15B8) st_value=0x400570',
    '[0x15B8,0x15C0) st_size=0x4',
    '[0x15A8,0x15C0) Elf64_Sym "_IO_stdin_used"',
    '[0x15C0,0x15C4) st_name=0x1A7 "__libc_csu_init"',
    '[0x15C4,0x15C5) st_info bind:1(GLOBAL) type:2(FUNC)',
    '[0x15C5,0x15C6) st_other=0x0',
    '[0x15C6,0x15C8) st_shndx=0xE',
    '[0x15C8,0x15D0) st_value=0x4004F0',
    '[0x15D0,0x15D8) st_size=0x65',
    '[0x15C0,0x15D8) Elf64_Sym "__libc_csu_init"',
    '[0x15D8,0x15DC) st_name=0xD3 "_end"',
    '[0x15DC,0x15DD) st_info bind:1(GLOBAL) type:0(NOTYPE)',
    '[0x15DD,0x15DE) st_other=0x0',
    '[0x15DE,0x15E0) st_shndx=0x1A',
    '[0x15E0,0x15E8) st_value=0x601038',
    '[0x15E8,0x15F0) st_size=0x0',
    '[0x15D8,0x15F0) Elf64_Sym "_end"',
    '[0x15F0,0x15F4) st_name=0x175 "_start"',
    '[0x15F4,0x15F5) st_info bind:1(GLOBAL) type:2(FUNC)',
    '[0x15F5,0x15F6) st_other=0x0',
    '[0x15F6,0x15F8) st_shndx=0xE',
    '[0x15F8,0x1600) st_value=0x4003E0',
    '[0x1600,0x1608) st_size=0x2A',
    '[0x15F0,0x1608) Elf64_Sym "_start"',
    '[0x1608,0x160C) st_name=0x1B7 "__bss_start"',
    '[0x160C,0x160D) st_info bind:1(GLOBAL) type:0(NOTYPE)',
    '[0x160D,0x160E) st_other=0x0',
    '[0x160E,0x1610) st_shndx=0x1A',
    '[0x1610,0x1618) st_value=0x601030',
    '[0x1618,0x1620) st_size=0x0',
    '[0x1608,0x1620) Elf64_Sym "__bss_start"',
    '[0x1620,0x1624) st_name=0x1C3 "main"',
    '[0x1624,0x1625) st_info bind:1(GLOBAL) type:2(FUNC)',
    '[0x1625,0x1626) st_other=0x0',
    '[0x1626,0x1628) st_shndx=0xE',
    '[0x1628,0x1630) st_value=0x4004D6',
    '[0x1630,0x1638) st_size=0x12',
    '[0x1620,0x1638) Elf64_Sym "main"',
    '[0x1638,0x163C) st_name=0x1C8 "_Jv_RegisterClasses"',
    '[0x163C,0x163D) st_info bind:2(WEAK) type:0(NOTYPE)',
    '[0x163D,0x163E) st_other=0x0',
    '[0x163E,0x1640) st_shndx=0x0',
    '[0x1640,0x1648) st_value=0x0',
    '[0x1648,0x1650) st_size=0x0',
    '[0x1638,0x1650) Elf64_Sym "_Jv_RegisterClasses"',
    '[0x1650,0x1654) st_name=0x1DC "__TMC_END__"',
    '[0x1654,0x1655) st_info bind:1(GLOBAL) type:1(OBJECT)',
    '[0x1655,0x1656) st_other=0x2',
    '[0x1656,0x1658) st_shndx=0x19',
    '[0x1658,0x1660) st_value=0x601030',
    '[0x1660,0x1668) st_size=0x0',
    '[0x1650,0x1668) Elf64_Sym "__TMC_END__"',
    '[0x1668,0x166C) st_name=0x1E8 "_ITM_registerTMCloneTable"',
    '[0x166C,0x166D) st_info bind:2(WEAK) type:0(NOTYPE)',
    '[0x166D,0x166E) st_other=0x0',
    '[0x166E,0x1670) st_shndx=0x0',
    '[0x1670,0x1678) st_value=0x0',
    '[0x1678,0x1680) st_size=0x0',
    '[0x1668,0x1680) Elf64_Sym "_ITM_registerTMCloneTable"',
    '[0x1680,0x1684) st_name=0x1B1 "_init"',
    '[0x1684,0x1685) st_info bind:1(GLOBAL) type:2(FUNC)',
    '[0x1685,0x1686) st_other=0x0',
    '[0x1686,0x1688) st_shndx=0xB',
    '[0x1688,0x1690) st_value=0x400390',
    '[0x1690,0x1698) st_size=0x0',
    '[0x1680,0x1698) Elf64_Sym "_init"',
    '[0x40,0x44) p_type=0x6',
    '[0x44,0x48) p_flags=0x5',
    '[0x48,0x50) p_offset=0x40',
    '[0x50,0x58) p_vaddr=0x400040',
    '[0x58,0x60) p_paddr=0x400040',
    '[0x60,0x68) p_filesz=0x1F8',
    '[0x68,0x70) p_memsz=0x1F8',
    '[0x70,0x78) p_align=0x8',
    '[0x40,0x78) elf64_phdr 0 PT_PHDR',
    '[0x78,0x7C) p_type=0x3',
    '[0x7C,0x80) p_flags=0x4',
    '[0x80,0x88) p_offset=0x238',
    '[0x88,0x90) p_vaddr=0x400238',
    '[0x90,0x98) p_paddr=0x400238',
    '[0x98,0xA0) p_filesz=0x1C',
    '[0xA0,0xA8) p_memsz=0x1C',
    '[0xA8,0xB0) p_align=0x1',
    '[0x78,0xB0) elf64_phdr 1 PT_INTERP',
    '[0xB0,0xB4) p_type=0x1',
    '[0xB4,0xB8) p_flags=0x5',
    '[0xB8,0xC0) p_offset=0x0',
    '[0xC0,0xC8) p_vaddr=0x400000',
    '[0xC8,0xD0) p_paddr=0x400000',
    '[0xD0,0xD8) p_filesz=0x69C',
    '[0xD8,0xE0) p_memsz=0x69C',
    '[0xE0,0xE8) p_align=0x200000',
    '[0xB0,0xE8) elf64_phdr 2 PT_LOAD',
    '[0xE8,0xEC) p_type=0x1',
    '[0xEC,0xF0) p_flags=0x6',
    '[0xF0,0xF8) p_offset=0xE10',
    '[0xF8,0x100) p_vaddr=0x600E10',
    '[0x100,0x108) p_paddr=0x600E10',
    '[0x108,0x110) p_filesz=0x220',
    '[0x110,0x118) p_memsz=0x228',
    '[0x118,0x120) p_align=0x200000',
    '[0xE8,0x120) elf64_phdr 3 PT_LOAD',
    '[0x120,0x124) p_type=0x2',
    '[0x124,0x128) p_flags=0x6',
    '[0x128,0x130) p_offset=0xE28',
    '[0x130,0x138) p_vaddr=0x600E28',
    '[0x138,0x140) p_paddr=0x600E28',
    '[0x140,0x148) p_filesz=0x1D0',
    '[0x148,0x150) p_memsz=0x1D0',
    '[0x150,0x158) p_align=0x8',
    '[0x120,0x158) elf64_phdr 4 PT_DYNAMIC',
    '[0x158,0x15C) p_type=0x4',
    '[0x15C,0x160) p_flags=0x4',
    '[0x160,0x168) p_offset=0x254',
    '[0x168,0x170) p_vaddr=0x400254',
    '[0x170,0x178) p_paddr=0x400254',
    '[0x178,0x180) p_filesz=0x44',
    '[0x180,0x188) p_memsz=0x44',
    '[0x188,0x190) p_align=0x4',
    '[0x158,0x190) elf64_phdr 5 PT_NOTE',
    '[0x190,0x194) p_type=0x6474E550',
    '[0x194,0x198) p_flags=0x4',
    '[0x198,0x1A0) p_offset=0x574',
    '[0x1A0,0x1A8) p_vaddr=0x400574',
    '[0x1A8,0x1B0) p_paddr=0x400574',
    '[0x1B0,0x1B8) p_filesz=0x34',
    '[0x1B8,0x1C0) p_memsz=0x34',
    '[0x1C0,0x1C8) p_align=0x4',
    '[0x190,0x1C8) elf64_phdr 6 OS',
    '[0x1C8,0x1CC) p_type=0x6474E551',
    '[0x1CC,0x1D0) p_flags=0x6',
    '[0x1D0,0x1D8) p_offset=0x0',
    '[0x1D8,0x1E0) p_vaddr=0x0',
    '[0x1E0,0x1E8) p_paddr=0x0',
    '[0x1E8,0x1F0) p_filesz=0x0',
    '[0x1F0,0x1F8) p_memsz=0x0',
    '[0x1F8,0x200) p_align=0x10',
    '[0x1C8,0x200) elf64_phdr 7 OS',
    '[0x200,0x204) p_type=0x6474E552',
    '[0x204,0x208) p_flags=0x4',
    '[0x208,0x210) p_offset=0xE10',
    '[0x210,0x218) p_vaddr=0x600E10',
    '[0x218,0x220) p_paddr=0x600E10',
    '[0x220,0x228) p_filesz=0x1F0',
    '[0x228,0x230) p_memsz=0x1F0',
    '[0x230,0x238) p_align=0x1',
    '[0x200,0x238) elf64_phdr 8 OS'
]

def get_interval_values(string):
    (lhs, rhs) = re.match(r'^\[(.*?),(.*?)\) .*$', string).group(1, 2)
    return (int(lhs, 16), int(rhs, 16))

def ancestor(a, b):
    (a_left, a_right) = get_interval_values(a)
    (b_left, b_right) = get_interval_values(b)
    return a_left <= b_left and a_right >= b_right

if __name__ == '__main__':
    result = algorithm.hierarchy(items, ancestor)
    print(result.json())
